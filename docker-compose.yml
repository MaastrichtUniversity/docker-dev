version: '3'
services:
  mdr:
    build:
      context: externals/dh-mdr
      dockerfile: Dockerfile
      args:
        - ENV_FILEBEAT_VERSION
        - ENV_RULE_WRAPPER_VERSION
        - SSL_ENV=${RIT_ENV}            # Whether to add our own CA-certificate to the CA-rootstore
    image: ${ENV_REGISTRY_HOST}/docker-dev/mdr:${ENV_TAG}
    depends_on:
      - keycloak
      - mdr-db
    env_file:
      - irods.secrets.cfg
      - mdr.env
    volumes:
      - static_content:/opt/staticfiles
      # This volume bind gets the code that is in your rule-wrapper local repository and adds it to MDR. This allows 
      # for PyCharm to auto-reload when you edit the irods-rule-wrapper code locally.
      # If you want to use the irods-rule-wrapper code provided by the "ENV_RULE_WRAPPER_VERSION" variable in the .env file of this repository,
      # comment the following line.
      - ./externals/irods-rule-wrapper:/opt/src/irods-rule-wrapper
      - ./externals/dh-python-irods-utils/dhpythonirodsutils:/usr/local/lib/python3.11/site-packages/dhpythonirodsutils
    profiles: ["minimal","full"]
    networks:
      common_default:
        aliases:
          - app.mdr.dh.local
      default:
        aliases:
          - app.mdr.dh.local
  elastic:
    build:
      context: externals/dh-elasticsearch
      dockerfile: Dockerfile
    image: ${ENV_REGISTRY_HOST}/docker-dev/elastic:${ENV_TAG}
    environment:
      ingest.geoip.downloader.enabled: "false"
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ENV_ELASTIC_PASSWORD}
      xpack.security.enabled: "true"
      VIRTUAL_HOST: elastic.${RIT_ENV}.dh.unimaas.nl
      VIRTUAL_PORT: 9200
    volumes:
      - elastic_metadata:/usr/share/elasticsearch/data
    profiles: ["minimal","full"]
    networks:
        default:
          aliases:
            - elastic.dh.local
        common_default:
          aliases:
            - elastic.dh.local
  dh-faker:
    build:
      context: externals/dh-faker
      dockerfile: docker/Dockerfile
      args:
        - SSL_ENV=${RIT_ENV}
    image: ${ENV_REGISTRY_HOST}/docker-dev/faker:${ENV_TAG}
    volumes:
      - ./externals/dh-faker:/opt/
      - ./staging-data:/mnt/ingest
    command: "python -c pass"
    environment:
      IRODS_HOST: ${ENV_IRODS_ICAT_HOST}
      IRODS_USER: rods
      IRODS_PASS: ${ENV_IRODS_PASSWORD_ADMIN}
      IRODS_CLIENT_SERVER_POLICY: CS_NEG_REQUIRE
      RABBITMQ_HOST: rabbitmq.dh.local
      RABBITMQ_USER: user
      RABBITMQ_PASS: password
      RABBITMQ_PORT: 5672
      LOG_LEVEL: INFO
    profiles: ["faker"]
    networks:
      default:
        aliases:
          - faker.dh.local
      common_default:
        aliases:
          - faker.dh.local
  keycloak:
    build:
      context: keycloak
      dockerfile: Dockerfile
    image: ${ENV_REGISTRY_HOST}/docker-dev/keycloak:${ENV_TAG}
    hostname: keycloak
    environment:
      VIRTUAL_HOST: keycloak.${RIT_ENV}.dh.unimaas.nl
      VIRTUAL_PORT: 8080
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      RIT_ENV: ${RIT_ENV}
      LDAP_ADMIN_PASSWORD: "admin"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./keycloak/realm-export.json:/tmp/realm-export.json
      - ./keycloak/users.json:/tmp/users.json
      - ./keycloak/import.sh:/tmp/import.sh
      - ./keycloak/startup.sh:/opt/jboss/startup-scripts/startup.sh
      - ./keycloak/datahub-keycloak-theme:/opt/jboss/keycloak/themes/datahub
    ports:
      # TODO: Find a better way to support both mdr->keycloak container traffic and browser->keycloak client traffic
      - "8080:8080"   # In order to bypass nginx-virtual-proxy while being redirected during Saml logins
    depends_on:
      - ldap
    profiles: ["minimal","full"]
    networks:
      default:
        aliases:
          - keycloak.dh.local
      common_default:
        aliases:
          - keycloak.dh.local
  ldap:
    image: osixia/openldap:1.3.0
    hostname: ldap
    environment:
      LDAP_ORGANISATION: "DataHub Maastricht"
      LDAP_DOMAIN: "datahubmaastricht.nl"
      LDAP_BASE_DN: ""
      LDAP_ADMIN_PASSWORD: "admin"
      LOGSTASH_TAGS: LDAP
    command: [--copy-service]
    ports:
      - "389:389"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./ldap/ldif_custom:/container/service/slapd/assets/config/bootstrap/ldif/custom/
    profiles: ["minimal","full"]
    networks:
      default:
        aliases:
          - ldap.dh.local
  davrods:
    build:
      context: externals/rit-davrods/
      args:
        - ENV_DAVRODS_IRODS_VERSION
        - ENV_DAVRODS_VERSION
        - ENV_FILEBEAT_VERSION
        - SSL_ENV=${RIT_ENV}            # Whether to add our own CA-certificate to the CA-rootstore
        - VHOST_FILE=davrods-vhost.conf
        - FILEBEAT_CONFIG_FILE=filebeat.yml
    image:  ${ENV_REGISTRY_HOST}/docker-dev/davrods:${ENV_TAG}
    depends_on:
      - icat
    environment:
      VIRTUAL_HOST: download.${RIT_ENV}.dh.unimaas.nl
      LOGSPOUT: ignore
    profiles: ["full"]
    networks:
      default:
        aliases:
          - davrods.dh.local
      common_default:
        aliases:
          - davrods.dh.local
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - webdav_logs:/var/log
  davrods-upload:
    build:
      context: externals/rit-davrods/
      args:
        - ENV_DAVRODS_IRODS_VERSION
        - ENV_DAVRODS_VERSION
        - ENV_FILEBEAT_VERSION
        - SSL_ENV=${RIT_ENV}            # Whether to add our own CA-certificate to the CA-rootstore
        - VHOST_FILE=upload-davrods-vhost.conf
        - FILEBEAT_CONFIG_FILE=filebeat-upload.yml
    image: ${ENV_REGISTRY_HOST}/docker-dev/davrods-upload:${ENV_TAG}
    depends_on:
      - icat
    environment:
      VIRTUAL_HOST: upload.${RIT_ENV}.dh.unimaas.nl
      LOGSPOUT: ignore
    profiles: ["full"]
    networks:
      default:
        aliases:
          - davrods-upload.dh.local
      common_default:
        aliases:
          - davrods-upload.dh.local
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - upload_logs:/var/log
  epicpid:
    build: externals/epicpid-microservice/docker
    image: ${ENV_REGISTRY_HOST}/docker-dev/epicpid:${ENV_TAG}
    environment:
      VIRTUAL_HOST: epicpid.${RIT_ENV}.dh.unimaas.nl
      LOGSTASH_TAGS: EPIC_PID
      LOG_LEVEL: DEBUG
      USERNAME: user
      PASSWORD: ${ENV_EPICPID_PASSWORD}
      RABBITMQ_HOST : rabbitmq.dh.local
      RABBITMQ_USER : user
      RABBITMQ_PASS : password
      RABBITMQ_PORT: 5672
      HANDLE_SERVER_URL: "https://epic-pid.storage.surfsara.nl:8003"
      BASEURI: "https://epic-pid.storage.surfsara.nl:8003"
      PRIVATE_KEY: "/opt/app/credentials/305_21_T12996_USER01_UM_privkey.pem"
      CERTIFICATE_ONLY: "/opt/app/credentials/305_21_T12996_USER01_UM_certificate_only.pem"
      PREFIX: "21.T12996"
      HANDLE_OWNER: "200:0.NA/21.T12996"
      HTTPS_VERIFY: "True"
      # Keys below are only set in production
#      ALLOWED_SEARCH_KEYS: ""
#      REVERSE_LOOKUP_BASEURI: ""
#      REVERSE_LOOKUP_PASSWORD: ""
#      REVERSE_LOOKUP_USERNAME: ""
      REQUESTS_CA_BUNDLE: /opt/epic5storagesurfsaranlCHAIN.crt
    profiles: ["backend","minimal","full"]
    networks:
      default:
        aliases:
          - epicpid.dh.local
      common_default:
        aliases:
          - epicpid.dh.local
    volumes:
      - ./externals/epicpid-microservice/:/opt/app
      - /etc/localtime:/etc/localtime:ro
  open-access-worker:
    build:
      context: ./externals/irods-open-access-repo
      dockerfile: ./docker/Dockerfile
      args:
        - SSL_ENV=${RIT_ENV}
    image: ${ENV_REGISTRY_HOST}/docker-dev/open-access-worker:${ENV_TAG}
    env_file:
      - irods.secrets.cfg # Using ONLY DATAVERSE_TOKEN
    environment:
      ENV: ${RIT_ENV}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: user
      RABBITMQ_PASS: password
      IRODS_HOST: ${ENV_IRODS_ICAT_HOST}
      IRODS_USER: rods
      IRODS_PASS: ${ENV_IRODS_PASSWORD_ADMIN}
      IRODS_CLIENT_SERVER_POLICY: CS_NEG_REQUIRE
      DATAVERSE_HOST: https://demo.dataverse.nl
      DH_MAILER_HOST: mailer.dh.local
      DH_MAILER_USERNAME: user
      DH_MAILER_PASSWORD: password
      HC_BACKEND_URL: http://help.mdr.${RIT_ENV}.dh.unimaas.nl
      LOG_LEVEL: INFO
      LOGSTASH_TAGS: OPEN_ACCESS_WORKER
    volumes:
      - /etc/localtime:/etc/localtime:ro
    profiles: ["full"]
    networks:
      default:
        aliases:
          - open-access-worker.dh.local
      common_default:
        aliases:
          - open-access-worker.dh.local
  sram-sync:
    build:
      context: externals/sram-sync/
      dockerfile: Dockerfile
      args:
        - SSL_ENV=${RIT_ENV}          # Whether to add our own CA-certificate to the CA-rootstore
    image: ${ENV_REGISTRY_HOST}/docker-dev/sram-sync:${ENV_TAG}
    depends_on:
      - ldap
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./externals/sram-sync/:/opt/app
    environment:
      LOG_LEVEL: INFO
      IRODS_HOST: ${ENV_IRODS_ICAT_HOST}
      IRODS_USER: rods
      IRODS_PASS: ${ENV_IRODS_PASSWORD_ADMIN}
      IRODS_CLIENT_SERVER_POLICY: CS_NEG_REQUIRE
      LDAP_USER: cn=admin,dc=datahubmaastricht,dc=nl
      LDAP_PASS: admin
      LDAP_HOST: ldap://ldap.dh.local
      LDAP_USERS_BASE_DN: ou=People,dc=flat,dc=datahubmaastricht,dc=nl
      LDAP_GROUPS_BASE_DN: ou=Groups,dc=flat,dc=datahubmaastricht,dc=nl
      LDAP_COS_BASE_DN:  dc=ordered,dc=datahubmaastricht,dc=nl
      DEFAULT_USER_PASSWORD: foobar
      LOGSTASH_TAGS: SRAMSYNC
      SYNC_USERS: "True"
      DELETE_USERS: "True"
      SYNC_GROUPS: "True"
      DELETE_GROUPS: "True"
    command: sram-sync.py --commit --scheduled
    profiles: ["full"]
    networks:
      default:
      common_default:
  mdr-db:
    image: postgres:${ENV_MDR_POSTGRES_VERSION}
    hostname: mdr-db
    environment:
      POSTGRES_DB: mdr
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: foobar
      LOGSPOUT: ignore
    volumes:
      - /etc/localtime:/etc/localtime:ro
    profiles: ["minimal","full"]
    networks:
      default:
        aliases:
          - mdr-db.dh.local
      common_default:
        aliases:
          - mdr-db.dh.local
  help-center-backend:
    build:
      context: externals/dh-help-center/backend
      dockerfile: Dockerfile
      args:
        - ENV_FILEBEAT_VERSION
    env_file:
      # REACT_APP_CAPTCHA_SECRET_KEY
      # ATLASSIAN_API_USERNAME
      # ATLASSIAN_API_KEY
      - irods.secrets.cfg
    image: ${ENV_REGISTRY_HOST}/docker-dev/help-center-backend:${ENV_TAG}
    environment:
      VIRTUAL_HOST: helpbackend.${RIT_ENV}.dh.unimaas.nl
      CONFLUENCE_CLOUD_URL: https://mumc.atlassian.net
      CONFLUENCE_CLOUD_SPACE_KEY: MDRDT
      LOGSTASH_TAGS: HELP_CENTER_BACKEND
      WATCHFILES_FORCE_POLLING: true
      AUTO_RELOAD: true
      MDR_URL : http://app.mdr.${RIT_ENV}.dh.unimaas.nl
      MDR_HOME_URL : http://mdr.${RIT_ENV}.dh.unimaas.nl
      HELP_CENTER_URL : http://help.mdr.${RIT_ENV}.dh.unimaas.nl
      JIRA_URL: https://mumc-sandbox.atlassian.net
      JIRA_SERVICE_DESK_PROJECT_NAME: "Maastricht Data Repository Support"
      JIRA_SERVICE_DESK_QUESTION_REQUEST_NAME: "Ask a question"
      JIRA_SERVICE_DESK_BUG_REQUEST_NAME: "Bug report"
      JIRA_SERVICE_DESK_FEATURE_REQUEST_NAME: "Feature request"
      JIRA_SERVICE_DESK_SUPPORT_REQUEST_NAME: "Support request"
      JIRA_SERVICE_DESK_EXTERNAL_ACCESS_REQUEST_NAME: "External Access Request"
      JIRA_SERVICE_DESK_AUTOMATED_PROCESS_SUPPORT_REQUEST_NAME: "Automated process support request"
    volumes:
      - ./externals/dh-help-center/backend/:/opt/
    profiles: ["minimal","full"]
    networks:
      dh_public:
        ipv4_address: 172.22.1.9
        aliases:
          - help-center-backend.dh.local
  help-center:
    build:
      context: externals/dh-help-center/frontend
      dockerfile: Dockerfile
    env_file:
      # REACT_APP_CAPTCHA_SITE_KEY
      - irods.secrets.cfg
    image: ${ENV_REGISTRY_HOST}/docker-dev/help-center:${ENV_TAG}
    environment:
      VIRTUAL_HOST: help.mdr.${RIT_ENV}.dh.unimaas.nl
      VIRTUAL_PORT: 3000
      LOGSTASH_TAGS: HELP_CENTER_FRONTEND
      HOST: 0.0.0.0
      REACT_APP_MDR_URL : http://app.mdr.${RIT_ENV}.dh.unimaas.nl
      REACT_APP_MDR_HOME_URL : http://mdr.${RIT_ENV}.dh.unimaas.nl
      REACT_APP_SERVICE_DESK_URL : https://mumc-sandbox.atlassian.net/
      REACT_APP_DATAHUB_HOME_URL : http://${RIT_ENV}.dh.unimaas.nl
    volumes:
      - './externals/dh-help-center/frontend/src:/app/src'
      - './externals/dh-help-center/frontend/public:/app/public'
    profiles: ["minimal","full"]
    networks:
      dh_public:
        ipv4_address: 172.22.1.10
        aliases:
          - help-center.dh.local
  dh-home:
    build:
      context: externals/dh-home
      dockerfile: Dockerfile
    image: ${ENV_REGISTRY_HOST}/docker-dev/dh-home:${ENV_TAG}
    environment:
      VIRTUAL_HOST: ${RIT_ENV}.dh.unimaas.nl
      VIRTUAL_PORT: 3000
      HOST: 0.0.0.0
    volumes:
      - './externals/dh-home/src:/app/src'
      - './externals/dh-home/public:/app/public'
    profiles: ["minimal","full"]
    networks:
      dh_public:
        ipv4_address: 172.22.1.11
        aliases:
          - datahub-homepage.dh.local
  mdr-home:
    build:
      context: externals/dh-mdr-home
      dockerfile: Dockerfile
    image: ${ENV_REGISTRY_HOST}/docker-dev/dh-mdr-home:${ENV_TAG}
    environment:
      VIRTUAL_HOST: mdr.${RIT_ENV}.dh.unimaas.nl
      VIRTUAL_PORT: 3000
      HOST: 0.0.0.0
      REACT_APP_MDR_URL : http://app.mdr.${RIT_ENV}.dh.unimaas.nl
      REACT_APP_DATAHUB_HC_URL : http://help.mdr.${RIT_ENV}.dh.unimaas.nl
      REACT_APP_DATAHUB_HOME_URL : http://${RIT_ENV}.dh.unimaas.nl
    volumes:
      - './externals/dh-mdr-home/src:/app/src'
      - './externals/dh-mdr-home/public:/app/public'
    profiles: ["minimal","full"]
    networks:
      dh_public:
        ipv4_address: 172.22.1.12
        aliases:
          - mdrhomepage.dh.local
  admin-tools-backend:
    build:
      context: externals/dh-admin-tools/backend
      dockerfile: Dockerfile
    image: ${ENV_REGISTRY_HOST}/docker-dev/admin-tools-backend:${ENV_TAG}
    environment:
      VIRTUAL_HOST: admintoolsbackend.${RIT_ENV}.dh.unimaas.nl
      WATCHFILES_FORCE_POLLING: true
      AUTO_RELOAD: true
    volumes:
      - ./externals/dh-admin-tools/backend/:/opt/
    profiles: ["full"]
    networks:
      default:
        aliases:
          - admin-tools-backend.dh.local
      common_default:
        aliases:
          - admin-tools-backend.dh.local
  admin-tools:
    build:
      context: externals/dh-admin-tools/frontend
      dockerfile: Dockerfile
    image: ${ENV_REGISTRY_HOST}/docker-dev/admin-tools:${ENV_TAG}
    environment:
      VIRTUAL_HOST: admintools.${RIT_ENV}.dh.unimaas.nl
      VIRTUAL_PORT: 3000
      HOST: 0.0.0.0
    volumes:
      - './externals/dh-admin-tools/frontend/src:/app/src'
      - './externals/dh-admin-tools/frontend/public:/app/public'
    profiles: ["full"]
    networks:
      default:
        aliases:
          - admin-tools.dh.local
      common_default:
        aliases:
          - admin-tools.dh.local


networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: "172.21.1.0/24"
  dh_public:
      ipam:
        driver: default
        config:
          - subnet: "172.22.1.0/24"
  common_default:
    external: true

volumes:
  static_content:
  webdav_logs:
  upload_logs:
  elastic_metadata:
