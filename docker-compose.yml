version: '2'
services:
  pacman:
    build:
      context: externals/dh-rdm-service-docker/dev
      args:
        - ENV_XDEBUG_VERSION
        - ENV_DRUPAL_VERSION
        - ENV_DRUPAL_VERSION_MD5
        - ENV_ISLANDORA_VERSION
        - ENV_DOCKERIZE_VERSION
        - ENV_SIMPLESAML_VERSION
        - ENV_SIMPLESAML_HASH
    depends_on:
      - irods
      - db
      - crossref-lookup
      - keycloak
    hostname: pacman
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./externals/handsontable:/var/www/html/sites/all/modules/handsontable
      - ./externals/islandora_ontology_autocomplete:/var/www/html/sites/all/modules/islandora_ontology_autocomplete
      - ./externals/islandora_crossref_lookup:/var/www/html/sites/all/modules/islandora_crossref_lookup
      - ./externals/rit-pacman:/var/www/html/sites/all/modules/pacman
      - ./externals/rit_landing_page:/var/www/html/sites/all/modules/rit_landing_page
      - ./externals/rit_forms:/var/www/html/sites/all/modules/rit_forms
      - ./externals/rit_faker:/var/www/html/sites/all/modules/rit_faker
      - ./externals/datahub_drupal_theme:/var/www/html/sites/all/themes/datahub
    environment:
      RIT_ENV: ${RIT_ENV}
      DB_NAME: pacman
      DB_HOST: db
      DB_PASS: foobar
      PACMAN_ADMIN_NAME: rit-admin
      PACMAN_ADMIN_PASS: foobar
      IRODS_FRONTEND_ENV_VIRTUAL_HOST: frontend.${RIT_ENV}.rit.unimaas.nl
      IRODS_WEBDAV_ENV_VIRTUAL_HOST: webdav.${RIT_ENV}.rit.unimaas.nl
      IRODS_HOST: irods
      IRODS_ENV_RODS_PASSWORD: irods
      CROSSREF_LOOKUP_HOST: crossref-lookup
      VIRTUAL_HOST: pacman.${RIT_ENV}.rit.unimaas.nl
      OLS_URL: http://ols.tst.rit.unimaas.nl
      LOGSTASH_TAGS: PACMAN
      DH_MAILER_HOST: mailer
      DH_MAILER_TO_ADDRESS: m.coonen@maastrichtuniversity.nl
      DH_MAILER_USERNAME: user
      DH_MAILER_PASSWORD: password
      DRUPAL_BASE_URL: http://pacman.{RIT_ENV}.rit.unimaas.nl
      SIMPLESAMLPHP_PASSWORD: password
      SIMPLESAMLPHP_SALT: 04ewyapckg6lj4wn7emchwu8kojtjaoh
  keycloak:
    image: jboss/keycloak:6.0.1
    hostname: keycloak
    environment:
      VIRTUAL_HOST: keycloak.${RIT_ENV}.dh.unimaas.nl
      VIRTUAL_PORT: 8080
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      RIT_ENV: ${RIT_ENV}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./keycloak/realm-export.json:/tmp/realm-export.json
      - ./keycloak/import.sh:/tmp/import.sh
      - ./keycloak/startup.sh:/opt/jboss/startup-scripts/startup.sh
      - ./keycloak/datahub-keycloak-theme:/opt/jboss/keycloak/themes/datahub
  irods:
    build:
      context: icat/
      args:
        - ENV_POSTGRES_VERSION
        - ENV_IRODS_VERSION
        - ENV_IRODS_MSI_CURL_VERSION
        - ENV_IRODS_EXT_CLANG_VERSION
        - ENV_IRODS_EXT_CLANG_RUNTIME_VERSION
        - ENV_FILEBEAT_VERSION
    depends_on:
      - irods-db
      - mirthconnect
    hostname: irods
    ports:
      - "1247:1247"
      - "1248:1248"
    environment:
      RODS_PASSWORD: irods
      PGPASSWORD: foobar
      VIRTUAL_HOST: irods.${RIT_ENV}.rit.unimaas.nl
      IRODS_INGEST_REMOVE_DELAY: ${ENV_IRODS_INGEST_REMOVE_DELAY}
      MIRTH_VALIDATION_CHANNEL: ${ENV_MIRTH_VALIDATION_CHANNEL}
      MIRTH_METADATA_CHANNEL: ${ENV_MIRTH_METADATA_CHANNEL}
      LOGSPOUT: ignore  #ignore, because logs are forwarded by filebeat (in production it's not in a docker container)
    networks:
      - default
      - common_default
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./externals/irods-ruleset:/rules
      - ./externals/irods-microservices:/microservices
  ires:
    build:
      context: ires/
      args:
        - ENV_IRODS_VERSION
        - ENV_IRODS_MSI_CURL_VERSION
        - ENV_IRODS_EXT_CLANG_VERSION
        - ENV_IRODS_EXT_CLANG_RUNTIME_VERSION
        - ENV_DOCKERIZE_VERSION
        - ENV_FILEBEAT_VERSION
    depends_on:
      - irods
    hostname: ires
    environment:
      RODS_PASSWORD: irods
      VIRTUAL_HOST: ires.${RIT_ENV}.rit.unimaas.nl
      IRODS_INGEST_REMOVE_DELAY: ${ENV_IRODS_INGEST_REMOVE_DELAY}
      MIRTH_VALIDATION_CHANNEL: ${ENV_MIRTH_VALIDATION_CHANNEL}
      MIRTH_METADATA_CHANNEL: ${ENV_MIRTH_METADATA_CHANNEL}
      LOGSPOUT: ignore  #ignore, because logs are forwarded by filebeat (in production it's not in a docker container)
    networks:
      - default
      - common_default
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./irods.secrets.cfg:/etc/secrets:ro
      - ./externals/irods-ruleset:/rules
      - ./externals/irods-microservices:/microservices
      - ./externals/irods-helper-cmd:/helpers
      - ./staging-data:/mnt/ingest            # binding a non-existing dir results in creation of that dir on host system
    # Required for CIFS mounting. cap-add not enough in Windows for some reason.
    privileged: true
  ires-centos:
    build:
      context: ires-centos/
      args:
        - ENV_IRODS_VERSION
        - ENV_IRODS_MSI_CURL_VERSION
        - ENV_IRODS_EXT_CLANG_VERSION
        - ENV_IRODS_EXT_CLANG_RUNTIME_VERSION
        - ENV_DOCKERIZE_VERSION
        - ENV_FILEBEAT_VERSION
    depends_on:
      - irods
    hostname: ires-centos
    environment:
      RODS_PASSWORD: irods
      VIRTUAL_HOST: ires-centos.${RIT_ENV}.rit.unimaas.nl
      IRODS_INGEST_REMOVE_DELAY: ${ENV_IRODS_INGEST_REMOVE_DELAY}
      MIRTH_VALIDATION_CHANNEL: ${ENV_MIRTH_VALIDATION_CHANNEL}
      MIRTH_METADATA_CHANNEL: ${ENV_MIRTH_METADATA_CHANNEL}
      LOGSPOUT: ignore  #ignore, because logs are forwarded by filebeat (in production it's not in a docker container)
    networks:
      - default
      - common_default
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./irods.secrets.cfg:/etc/secrets:ro
      - ./externals/irods-ruleset:/rules
      - ./externals/irods-microservices:/microservices
      - ./externals/irods-helper-cmd:/helpers
      - ./staging-data:/mnt/ingest            # binding a non-existing dir results in creation of that dir on host system
    # Required for CIFS mounting. cap-add not enough in Windows for some reason.
    privileged: true
  ires-s3-1:
    build:
      context: ires-s3/
      args:
        - ENV_IRODS_VERSION
        - ENV_IRODS_MSI_CURL_VERSION
        - ENV_IRODS_EXT_CLANG_VERSION
        - ENV_IRODS_EXT_CLANG_RUNTIME_VERSION
        - ENV_IRODS_RESC_PLUGIN_S3_VERSION
        - ENV_DOCKERIZE_VERSION
        - ENV_FILEBEAT_VERSION
    depends_on:
      - irods
      - ires  # Because of ingest resource
      - minio1
    hostname: ires-s3-1
    environment:
      RODS_PASSWORD: irods
      VIRTUAL_HOST: ires-s3-1.${RIT_ENV}.rit.unimaas.nl
      IRODS_INGEST_REMOVE_DELAY: ${ENV_IRODS_INGEST_REMOVE_DELAY}
      MIRTH_VALIDATION_CHANNEL: ${ENV_MIRTH_VALIDATION_CHANNEL}
      MIRTH_METADATA_CHANNEL: ${ENV_MIRTH_METADATA_CHANNEL}
      LOGSPOUT: ignore  #ignore, because logs are forwarded by filebeat (in production it's not in a docker container)
      ENV_S3_ACCESS_KEY: ${ENV_S3_ACCESS_KEY1}
      ENV_S3_SECRET_KEY: ${ENV_S3_SECRET_KEY1}
      ENV_S3_RESC_NAME: "UM-Ceph-S3-AC"
      ENV_S3_HOST: "minio1:9000"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./irods.secrets.cfg:/etc/secrets:ro
      - ./externals/irods-ruleset:/rules
      - ./externals/irods-microservices:/microservices
      - ./externals/irods-helper-cmd:/helpers
  ires-s3-2:
    build:
      context: ires-s3/
      args:
        - ENV_IRODS_VERSION
        - ENV_IRODS_MSI_CURL_VERSION
        - ENV_IRODS_EXT_CLANG_VERSION
        - ENV_IRODS_EXT_CLANG_RUNTIME_VERSION
        - ENV_IRODS_RESC_PLUGIN_S3_VERSION
        - ENV_DOCKERIZE_VERSION
        - ENV_FILEBEAT_VERSION
    depends_on:
      - irods
      - ires  # Because of ingest resource
      - minio2
    hostname: ires-s3-2
    environment:
      RODS_PASSWORD: irods
      VIRTUAL_HOST: ires-s3-2.${RIT_ENV}.rit.unimaas.nl
      IRODS_INGEST_REMOVE_DELAY: ${ENV_IRODS_INGEST_REMOVE_DELAY}
      MIRTH_VALIDATION_CHANNEL: ${ENV_MIRTH_VALIDATION_CHANNEL}
      MIRTH_METADATA_CHANNEL: ${ENV_MIRTH_METADATA_CHANNEL}
      LOGSPOUT: ignore  #ignore, because logs are forwarded by filebeat (in production it's not in a docker container)
      ENV_S3_ACCESS_KEY: ${ENV_S3_ACCESS_KEY2}
      ENV_S3_SECRET_KEY: ${ENV_S3_SECRET_KEY2}
      ENV_S3_RESC_NAME: "UM-Ceph-S3-GL"
      ENV_S3_HOST: "minio2:9000"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./irods.secrets.cfg:/etc/secrets:ro
      - ./externals/irods-ruleset:/rules
      - ./externals/irods-microservices:/microservices
      - ./externals/irods-helper-cmd:/helpers
  db:
    image: mysql:${ENV_MYSQL_VERSION}
    hostname: db
    environment:
      MYSQL_DATABASE: pacman
      MYSQL_ROOT_PASSWORD: foobar
      LOGSPOUT: ignore
    volumes:
      - /etc/localtime:/etc/localtime:ro
  irods-db:
    image: postgres:${ENV_POSTGRES_VERSION}
    hostname: irods-db
    environment:
      POSTGRES_PASSWORD: foobar
      LOGSPOUT: ignore
    volumes:
      - /etc/localtime:/etc/localtime:ro
  irods-frontend:
    build:
      context: externals/irods-frontend/
      args:
        - ENV_IRODS_REST_VERSION
        - ENV_CLOUDBROWSER_VERSION
        - ENV_FILEBEAT_VERSION
    hostname: irods-frontend
    environment:
      VIRTUAL_HOST: frontend.${RIT_ENV}.rit.unimaas.nl
      PACMAN_HOST: http://pacman.${RIT_ENV}.rit.unimaas.nl
      # logs are sent via filebeat, so logspout should be ignored
      LOGSPOUT: ignore
    networks:
      - default
      - common_default
    volumes:
      - /etc/localtime:/etc/localtime:ro
  davrods:
    build:
      context: externals/rit-davrods/
      args:
        - ENV_DAVRODS_IRODS_VERSION
        - ENV_DAVRODS_VERSION
    depends_on:
      - irods
    environment:
      VIRTUAL_HOST: webdav.${RIT_ENV}.rit.unimaas.nl
      LOGSTASH_TAGS: DAVRODS
    networks:
      - default
      - common_default
    volumes:
      - /etc/localtime:/etc/localtime:ro
  metalnx:
    build: externals/rit-metalnx-web/
    depends_on:
      - irods
    hostname: metalnx
    environment:
      IRODS_HOST: irods
      IRODS_PORT: 1247
      IRODS_ZONE: nlmumc
      IRODS_USER: rods
      IRODS_PASS: irods
      VIRTUAL_HOST: metalnx.${RIT_ENV}.rit.unimaas.nl
      VIRTUAL_PORT: 8080
      LOGSTASH_TAGS: METALNX
    volumes:
      - /etc/localtime:/etc/localtime:ro
  mirthconnect:
    build:
      context: mirthconnect/
      args:
        - ENV_MIRTH_CONNECT_VERSION
        - ENV_FILEBEAT_VERSION
    depends_on:
      - epicpid
      - irods-frontend
    hostname: mirthconnect
    ports:
      - "8443:8443"
      - "6661-6671:6661-6671"
    environment:
      PGPASSWORD: foobar
      RIT_ENV: ${RIT_ENV}
      VIRTUAL_HOST: mirthconnect.${RIT_ENV}.rit.unimaas.nl
      # dev only, in acc/prod MIRTH is not in a docker container
      LOGSTASH_TAGS: MIRTH-UM
      LOGSPOUT: ignore
    networks:
      - default
      - common_default
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./externals/channels:/opt/channels
      - ./externals/alerts:/opt/alerts
      - ./channels-backup:/opt/channels-backup
  crossref-lookup:
    build: externals/crossref-lookup
    environment:
      VIRTUAL_HOST: crossref-lookup.${RIT_ENV}.rit.unimaas.nl
      LOGSTASH_TAGS: CROSSREF_LOOKUP
    networks:
      - default
    volumes:
      - ./externals/crossref-lookup/app:/usr/src/app
      - /etc/localtime:/etc/localtime:ro
  epicpid:
    build: externals/epicpid-microservice/docker
    environment:
      VIRTUAL_HOST: epicpid.${RIT_ENV}.rit.unimaas.nl
      LOGSTASH_TAGS: EPIC_PID
      LOG_LEVEL: DEBUG
      USERNAME: user
      PASSWORD: foobar
      RABBITMQ_HOST : rabbitmq
      RABBITMQ_USER : user
      RABBITMQ_PASS : password
      RABBITMQ_PORT: 5672
      EPIC_CREDENTIALS: my_credentials_test.json
      REQUESTS_CA_BUNDLE: /opt/epic5storagesurfsaranlCHAIN.crt
    networks:
      - default
      - common_default
    volumes:
      - ./externals/epicpid-microservice/:/opt/app
      - /etc/localtime:/etc/localtime:ro
  minio1:
    image: minio/minio:RELEASE.2019-05-23T00-29-34Z
    environment:
      VIRTUAL_HOST: minio1.${RIT_ENV}.rit.unimaas.nl
      MINIO_ACCESS_KEY: ${ENV_S3_ACCESS_KEY1}
      MINIO_SECRET_KEY: ${ENV_S3_SECRET_KEY1}
    entrypoint: sh
    command: -c 'mkdir -p /data/dh-irods-bucket-dev && /usr/bin/minio server /data'
  minio2:
    image: minio/minio:RELEASE.2019-05-23T00-29-34Z
    environment:
      VIRTUAL_HOST: minio2.${RIT_ENV}.rit.unimaas.nl
      MINIO_ACCESS_KEY: ${ENV_S3_ACCESS_KEY2}
      MINIO_SECRET_KEY: ${ENV_S3_SECRET_KEY2}
    entrypoint: sh
    command: -c 'mkdir -p /data/dh-irods-bucket-dev && /usr/bin/minio server /data'
networks:
  common_default:
    external: true