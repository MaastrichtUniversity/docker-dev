filter {
      if "IRES" in [tags] {
		  if [message] =~ /environment variable set/ {drop { }}
		  if [message] =~ /Authenticated/ {drop { }}
		
		  grok {
				match => { "message" => "%{SYSLOGTIMESTAMP:log_timestamp}\spid:%{POSINT:pid}\s%{LOGLEVEL:level}:\s+%{GREEDYDATA:rods_msg}" }
		  }
		
		 # if [level] == "DEBUG" {drop { }}
		
       mutate {
            add_field => { "logtrail" => "ires" }
          } 
   
		  # Get client IPs
		  if [rods_msg] =~ /started/ {
					grok {
						  break_on_match => false
						  match => { "rods_msg" => "Agent\sprocess\s%{POSINT:agent_pid}\sstarted\sfor\spuser=%{USER:puser}\sand\scuser=%{EMAILADDRESS:cuser}\sfrom\s%{IPV4:irods_client_addr}" }
						  match => { "rods_msg" => "Agent\sprocess\s%{POSINT:agent_pid}\sstarted\sfor\spuser=%{USER:puser}\sand\scuser=%{USER:cuser}\sfrom\s%{IPV4:irods_client_addr}" }
					}
			}
		
		
		  # GeoIP
		  if [irods_client_addr] {
				  geoip {
					source => "irods_client_addr"
					target => "geoip"
					database => "/etc/logstash/GeoLite2-City.mmdb"
					add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
					add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
					add_tag => ["geoip"]
				  }
		
				  mutate {
					convert => [ "[geoip][coordinates]", "float" ]
				  }
		   }
		   
		   
		   
		   
			
			# TODO: Find better solution for Year is not present in the log date format, getting it HARDCODED
			if [log_timestamp]{
				mutate {
				   replace => [ "log_timestamp", "%{log_timestamp} 2017" ]
				   remove_field => "log_year"
				}
				date { 
				  timezone => "Europe/Brussels"
				  match => [ "log_timestamp", "MMM dd HH:mm:ss yyyy", "MMM  d HH:mm:ss yyyy" ] 
				}
		   }
     }
}
