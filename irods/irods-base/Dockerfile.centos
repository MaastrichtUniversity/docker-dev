# syntax=docker/dockerfile:1

# Dockerfile to serve as base for iRODS *development* containers.
# Containers build out of this image are meant to be run in your development
# environment, not in a production setting.
#
# This image only includes files that any iRODS instance (iCAT or iRES) will
# probably need. Also, included are utilities that might come in handy during
# development or debugging. Stuff you wound't need in production!
#
# Rules is: include here only things that all iRODS instances would need. If
# something is only needed for an iCAT, or a specific iRES, we don't include it
# here.

FROM centos:7

# Load build arguments from environment
ARG ENV_IRODS_VERSION
ARG ENV_IRODS_EXT_CLANG_VERSION
ARG ENV_IRODS_EXT_CLANG_RUNTIME_VERSION
ARG ENV_FILEBEAT_VERSION

RUN yum install -y \
    epel-release \
    ca-certificates \
    # epel-release must be installed before trying to pull packages such as python-pip, cmake3, and a few others
    && yum install -y \
    # backwards compatibility for 'service'-command that is used by the iRODS-install script
    initscripts \
    sudo \
    wget \
    unixODBC \
    fuse-libs \
    librabbitmq-devel \
    perl-JSON \
    python \
    python-psutil \
    python-requests \
    python-jsonschema \
    python-ldap \
    lsof \
    fortune-mod \
    nano \
    cifs-utils  \
    openssl \
    curl \
    # packages required for building ruleset and microservices {{
    openssl-devel \
    libcurl-devel \
    gcc-c++ \
    make \
    rpm-build \
    cmake3 \
    python-pip
    # }} end

ENV IRODS_VERSION ${ENV_IRODS_VERSION}
RUN rpm --import https://packages.irods.org/irods-signing-key.asc \
    && wget -qO - https://packages.irods.org/renci-irods.yum.repo | sudo tee /etc/yum.repos.d/renci-irods.yum.repo \
    && yum install -y \
    irods-server-${IRODS_VERSION} \
    irods-devel-${IRODS_VERSION} \
    # packages required for building microservices
    irods-externals-clang-runtime${ENV_IRODS_EXT_CLANG_RUNTIME_VERSION} \
    irods-externals-clang${ENV_IRODS_EXT_CLANG_VERSION} \
    # packages required for python rule engine
    irods-rule-engine-plugin-python-${IRODS_VERSION}

# install Metalnx RMD
# Installation of rpm tries to start the rmd service, which causes D-Bus errors to appear. These can be safely ignored
# since we will start the rmd-service manually in bootstrap.sh
ADD ./emc-metalnx-rmd-1.0-22.noarch.rpm /tmp/emc-metalnx-rmd-1.0-22.noarch.rpm
RUN rpm -Uvh /tmp/emc-metalnx-rmd-1.0-22.noarch.rpm

# Filebeat
RUN wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-${ENV_FILEBEAT_VERSION}-x86_64.rpm -O /tmp/filebeat.rpm \
 && rpm -Uvh /tmp/filebeat.rpm

# Add scripts needed to finalize install
RUN mkdir -p /opt/irods
ADD extra_utils/ /opt/irods/

# Add test/dev ONLY CA
RUN mkdir -p /etc/irods/SSL/
ADD ./test-dev-ssl-certs/* /etc/irods/SSL/

# TODO: Necessary?
RUN chmod a+x /opt/irods/*
